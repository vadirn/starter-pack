export function rateLimit(fn, times, delta) {
  let n = 0;
  let lastRecordedTime;
  let cachedReturnValue;

  return (...args) => {
    const currentTime = new Date().getTime();
    lastRecordedTime = lastRecordedTime ?? currentTime;
    n += 1;

    if (currentTime > lastRecordedTime + delta) {
      // reset if allowed delta passed since last recorded time
      n = 1;
      lastRecordedTime = currentTime;
      cachedReturnValue = fn(...args);
      return cachedReturnValue;
    }

    if (n > times) {
      return cachedReturnValue;
    }

    cachedReturnValue = fn(...args);
    return cachedReturnValue;
  };
}
